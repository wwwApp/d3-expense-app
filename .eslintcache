[{"/Users/woosong/gitProjects/expense-app/src/App.js":"1","/Users/woosong/gitProjects/expense-app/src/index.js":"2","/Users/woosong/gitProjects/expense-app/src/utils.js":"3","/Users/woosong/gitProjects/expense-app/src/viz/Expenses.js":"4"},{"size":575,"mtime":1611112291559,"results":"5","hashOfConfig":"6"},{"size":192,"mtime":1611001368133,"results":"7","hashOfConfig":"6"},{"size":0,"mtime":1611097723307,"results":"8","hashOfConfig":"6"},{"size":4281,"mtime":1611340420341,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c804sw",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/woosong/gitProjects/expense-app/src/App.js",[],"/Users/woosong/gitProjects/expense-app/src/index.js",[],"/Users/woosong/gitProjects/expense-app/src/utils.js",[],"/Users/woosong/gitProjects/expense-app/src/viz/Expenses.js",["18","19","20","21"],{"ruleId":"22","severity":1,"message":"23","line":43,"column":9,"nodeType":"24","messageId":"25","endLine":43,"endColumn":23},{"ruleId":"22","severity":1,"message":"26","line":43,"column":25,"nodeType":"24","messageId":"25","endLine":43,"endColumn":42},{"ruleId":"27","severity":1,"message":"28","line":45,"column":8,"nodeType":"29","endLine":47,"endColumn":3},{"ruleId":"27","severity":1,"message":"30","line":57,"column":16,"nodeType":"31","endLine":57,"endColumn":47},"no-unused-vars","'mySelectedWeek' is assigned a value but never used.","Identifier","unusedVar","'setMySelectedWeek' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'forceTick' function makes the dependencies of useEffect Hook (at line 52) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'forceTick' in its own useCallback() Hook.","VariableDeclarator","Assignments to the 'container' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression"]