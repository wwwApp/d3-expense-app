[{"/Users/woosong/gitProjects/expense-app/src/App.js":"1","/Users/woosong/gitProjects/expense-app/src/index.js":"2","/Users/woosong/gitProjects/expense-app/src/utils.js":"3","/Users/woosong/gitProjects/expense-app/src/viz/Expenses.js":"4"},{"size":1625,"mtime":1611692214207,"results":"5","hashOfConfig":"6"},{"size":192,"mtime":1611001368133,"results":"7","hashOfConfig":"6"},{"size":0,"mtime":1611097723307,"results":"8","hashOfConfig":"6"},{"size":5120,"mtime":1611692187713,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c804sw",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/woosong/gitProjects/expense-app/src/App.js",[],"/Users/woosong/gitProjects/expense-app/src/index.js",[],"/Users/woosong/gitProjects/expense-app/src/utils.js",[],"/Users/woosong/gitProjects/expense-app/src/viz/Expenses.js",["19","20","21"],"import { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport chroma from 'chroma-js';\nimport _ from 'lodash';\n\nconst height = 600;\nconst margin = { left: 40, top: 25, right: 40, bottom: 25 };\nconst radius = 10;\n\n// d3 functions\nconst daysOfWeek = [\n\t[0, 'Sat'],\n\t[1, 'Mon'],\n\t[2, 'Tue'],\n\t[3, 'Wed'],\n\t[4, 'Thu'],\n\t[5, 'Fri'],\n\t[6, 'Sun'],\n];\nconst xScale = d3.scaleBand().domain(_.map(daysOfWeek, 0));\nconst yScale = d3.scaleLinear().range([height - margin.bottom, margin.top]);\nconst colorScale = chroma.scale(['#53cf8d', '#f7d283', '#e85151']);\nconst amountScale = d3.scaleLinear();\nconst simulation = d3\n\t.forceSimulation()\n\t.alphaDecay(0.001)\n\t.velocityDecay(0.3)\n\t.force('collide', d3.forceCollide(radius))\n\t.force(\n\t\t'x',\n\t\td3.forceX((d) => d.focusX)\n\t)\n\t.force(\n\t\t'y',\n\t\td3.forceY((d) => d.focusY)\n\t)\n\t.stop();\n\nfunction Expenses({ width, data, selectedWeek }) {\n\tlet container = null;\n\tlet calculatedData = null;\n\tlet circles = null;\n\tlet days = null;\n\tlet weeks = null;\n\tconst containerRef = useRef(null);\n\n\tconst forceTick = () => {\n\t\tcircles.attr('cx', (d) => d.x).attr('cy', (d) => d.y);\n\t};\n\n\tuseEffect(() => {\n\t\txScale.range([margin.left, width - margin.right]);\n\t\tsimulation.on('tick', forceTick);\n\t}, [forceTick]);\n\n\tuseEffect(() => {\n\t\tcontainer = d3.select(containerRef.current);\n\t\tcalculateData();\n\t\trenderCircles();\n\n\t\tsimulation.nodes(calculatedData).alpha(0.9).restart();\n\t});\n\n\tuseEffect(() => {\n\t\trenderDays();\n\t\trenderWeeks();\n\t}, [data]);\n\n\t// calculate expenses circle position using its date\n\tconst calculateData = () => {\n\t\tlet weeksExtent = d3.extent(data, (d) => d3.timeWeek.floor(d.date));\n\t\tyScale.domain(weeksExtent);\n\n\t\tlet selectedWeekRadius = (width - margin.left - margin.right) / 2;\n\t\tlet perAngle = Math.PI / 6;\n\n\t\t// rectangle for each week\n\t\tweeks = d3.timeWeek\n\t\t\t.range(weeksExtent[0], d3.timeWeek.offset(weeksExtent[1], 1))\n\t\t\t.map((week) => {\n\t\t\t\treturn {\n\t\t\t\t\tweek,\n\t\t\t\t\tx: margin.left,\n\t\t\t\t\ty: yScale(week) + height,\n\t\t\t\t};\n\t\t\t});\n\n\t\t// circles for the back of each day in semi-circle\n\t\tdays = daysOfWeek.map((date) => {\n\t\t\tlet [dayOfWeek, name] = date;\n\t\t\tlet angle = Math.PI - perAngle * dayOfWeek;\n\t\t\tlet x = selectedWeekRadius * Math.cos(angle) + width / 2;\n\t\t\tlet y = selectedWeekRadius * Math.sin(angle) + margin.top;\n\n\t\t\treturn {\n\t\t\t\tname,\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t};\n\t\t});\n\n\t\tcalculatedData = _.chain(data)\n\t\t\t.groupBy((d) => d3.timeWeek.floor(d.date))\n\t\t\t.map((week, key) => {\n\t\t\t\tlet weekKey = new Date(key);\n\t\t\t\treturn week.map((exp) => {\n\t\t\t\t\tlet dayOfWeek = exp.date.getDay();\n\t\t\t\t\tlet focusX = xScale(dayOfWeek);\n\t\t\t\t\tlet focusY = yScale(weekKey) + height;\n\n\t\t\t\t\tif (weekKey.getTime() === selectedWeek.getTime()) {\n\t\t\t\t\t\tlet angle = Math.PI - perAngle * dayOfWeek;\n\n\t\t\t\t\t\tfocusX =\n\t\t\t\t\t\t\tselectedWeekRadius * Math.cos(angle) + width / 2;\n\t\t\t\t\t\tfocusY =\n\t\t\t\t\t\t\tselectedWeekRadius * Math.sin(angle) + margin.top;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Object.assign(exp, {\n\t\t\t\t\t\tfocusX: focusX,\n\t\t\t\t\t\tfocusY: focusY,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.flatten()\n\t\t\t.value();\n\n\t\t// set the scale depending on the amount of expense\n\t\tlet amountExtent = d3.extent(calculatedData, (d) => d.amount);\n\t\tamountScale.domain(amountExtent);\n\t};\n\n\tconst renderCircles = () => {\n\t\t// console.log('rendering circles');\n\t\t// draw expenses circle\n\t\tcircles = container\n\t\t\t.selectAll('.expense')\n\t\t\t.data(calculatedData, (d) => d.name);\n\n\t\t// exit\n\t\tcircles.exit().remove();\n\n\t\t// enter + update\n\t\tcircles = circles\n\t\t\t.enter()\n\t\t\t.append('circle')\n\t\t\t.classed('expense', true)\n\t\t\t.attr('r', radius)\n\t\t\t.attr('fill-opacity', 0.25)\n\t\t\t.attr('stroke-width', 3)\n\t\t\t.merge(circles)\n\t\t\t.attr('fill', (d) => colorScale(amountScale(d.amount)))\n\t\t\t.attr('stroke', (d) => colorScale(amountScale(d.amount)));\n\t};\n\n\tconst renderDays = () => {\n\t\t// console.log('rendering days');\n\t\tlet renderDays = container\n\t\t\t.selectAll('.day')\n\t\t\t.data(days, (d) => d.name)\n\t\t\t.enter()\n\t\t\t.append('g')\n\t\t\t.classed('day', true)\n\t\t\t.attr('transform', (d) => `translate(${[d.x, d.y]})`);\n\n\t\tlet daysRadius = 60;\n\t\tlet fontSize = 12;\n\n\t\trenderDays\n\t\t\t.append('circle')\n\t\t\t.attr('r', daysRadius)\n\t\t\t.attr('fill', '#ccc')\n\t\t\t.attr('opacity', 0.25);\n\n\t\trenderDays\n\t\t\t.append('text')\n\t\t\t.attr('y', daysRadius + fontSize)\n\t\t\t.attr('text-anchor', 'middle')\n\t\t\t.attr('dy', '.35em')\n\t\t\t.attr('fill', '#ccc')\n\t\t\t.style('font-weight', 600)\n\t\t\t.text((d) => d.name);\n\t};\n\n\tconst renderWeeks = () => {\n\t\t// console.log('rendering weeks');\n\t\tlet renderWeeks = container\n\t\t\t.selectAll('.week')\n\t\t\t.data(weeks, (d) => d.name)\n\t\t\t.enter()\n\t\t\t.append('g')\n\t\t\t.classed('week', true)\n\t\t\t.attr('transform', (d) => `translate(${[d.x, d.y]})`);\n\n\t\tlet rectHeight = 10;\n\n\t\trenderWeeks\n\t\t\t.append('rect')\n\t\t\t.attr('y', -rectHeight / 2)\n\t\t\t.attr('width', width - margin.left - margin.right)\n\t\t\t.attr('height', rectHeight)\n\t\t\t.attr('fill', '#ccc')\n\t\t\t.attr('opacity', 0.25);\n\n\t\tlet weekFormat = d3.timeFormat('%m/%d');\n\t\trenderWeeks\n\t\t\t.append('text')\n\t\t\t.attr('text-anchor', 'end')\n\t\t\t.attr('dy', '.35em')\n\t\t\t.text((d) => weekFormat(d.week));\n\t};\n\n\treturn <svg width={width} height={height * 2} ref={containerRef}></svg>;\n}\n\nexport default Expenses;\n",{"ruleId":"22","severity":1,"message":"23","line":54,"column":5,"nodeType":"24","endLine":54,"endColumn":16,"suggestions":"25"},{"ruleId":"22","severity":1,"message":"26","line":57,"column":15,"nodeType":"27","endLine":57,"endColumn":46},{"ruleId":"22","severity":1,"message":"28","line":67,"column":5,"nodeType":"24","endLine":67,"endColumn":11,"suggestions":"29"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'width'. Either include it or remove the dependency array.","ArrayExpression",["30"],"Assignments to the 'container' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has missing dependencies: 'renderDays' and 'renderWeeks'. Either include them or remove the dependency array.",["31"],{"desc":"32","fix":"33"},{"desc":"34","fix":"35"},"Update the dependencies array to be: [forceTick, width]",{"range":"36","text":"37"},"Update the dependencies array to be: [data, renderDays, renderWeeks]",{"range":"38","text":"39"},[1233,1244],"[forceTick, width]",[1472,1478],"[data, renderDays, renderWeeks]"]